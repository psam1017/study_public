동적 할당(Dynamic Allocation)

프로그램 실행 도중에 사용할 메모리 공간을 할당함을 의미한다.
예를 들어, 배열의 길이가 정해지지 않았을 때, 사용자가 실행 중에 길이를 정할 수 있게 하는 것이다.
stdlib.h를 포함(include)해야 한다.

1. 동적 할당은 힙heap 영역에서 공간을 할당하므로 프로세스가 종료되면 운영 체제에 메모리 리소스가 반납되어 해제된다. 그러나 프로세스가 계속 실행되는 동안에는 할당된 영역이 유지되기 때문에 사용이 완료되면 반납하는 것이 유리하다.

2. 정적 할당은 이와 대조적으로 프로그램을 실행하는 순간 프로그램이 사용할 메모리 크기를 고려하여 할당하는 것이다.

3. 정적 할당은 지역 변수가 해당 프로세스를 벗어나면 자동으로 공간 해제가 이루어지는 스택을 사용한다. 반면에 동적 할당은 프로세스와 상관 없이 필요한 메모리를 운영체제에 요구하여 할당 및 해제한다.

----------

동적 할당 함수

(동적 배열 할당 'm'emory allocation)
자료형* 포인터명 = (자료형*)malloc(sizeof(자료형) * 길이);
-> 길이에는 변수를 넣을 수 있다. 즉, 길이를 제한할 때 쓰는 게 아니라 길이를 모를 때 쓴다.
-> heap은 자동 초기화가 안 되기 때문에 직접 값을 넣을 때 쓰는 함수이고, 초기화를 하려면 calloc을 써야 한다.

(동적 배열 초기화 'c'lear allocation)
자료형* 포인터명 = (자료형*)calloc(길이, sizeof(자료형));
-> 할당된 공간의 모든 비트를 0으로 초기화한다. 모든 비트가 0이므로 결과는 0이 된다.

(동적 배열 크기 변경 're'size allocation)
포인터명 = (자료형*)realloc(포인터명, sizeof(자료형) * 길이);
-> 이미 동적 할당한 배열의 길이를 변경한다.

(동적 메모리 해제 free)
free(포인터명);
