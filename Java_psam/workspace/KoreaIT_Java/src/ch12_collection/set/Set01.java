package ch12_collection.set;

public class Set01 {
	
//	Set : 자료를 중복되지 않게 관리할 수 있는 자료구조. HashSet은 자료 순서가 보장되지 않는다.
//	객체는 중복해서 저장할 수 없고, Null도 하나만 저장할 수 있다.
//		-> 자료를 검색하는 용도로 사용할 때 유리하며, Set 내부 알고리즘으로도 검색에 유리하게 자료를 정리한다. 
//	
//	주요 메소드 : add(E Item), contains(Object obj), isEmpty(), size(), remove(), clear()
//		-> 인덱스로 관리하지 않으므로 인덱스를 인수로 가지는 메소드가 없다.
//			-> 요소를 순회하는 Iterator를 사용해야 한다.
//	
//	반복자 : Iterator 인터페이스를 구현한 객체로서, iterator() 메소드로 호출하여 생성한다.
//		-> 주요 메소드 : iterator(), hasNext(), next(), remove()
//		-> 한 번 순회를 마치고 나면 더 이상 사용할 수 없는 1회용이다.
//	
//	
//		
//	HashSet : Set 인터페이스를 구현한 클래스이다. 객체의 비교에 해시가 사용된다.
//		-> HashSet에서 객체가 같으려면, (해시코드가 같아야 한다) && (인스턴스의 값이 같아야 한다).
//		-> 객체를 순서 없이 저장하고, 동일한 객체는 중복으로 저장하지 않는다.
//			-> 즉, 모든 자료들을 하나씩 가져온다면, 저장 순서가 보장되지 않는다.
//	
//	TreeSet : HashSet + Tree 정렬 기능.
//		-> TreeSet 생성자를 사용해 정렬 순서를 임의로 변경할 수 있다. -> TreeSet02 참고.
}
