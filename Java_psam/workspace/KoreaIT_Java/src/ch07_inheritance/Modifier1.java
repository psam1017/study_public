package ch07_inheritance;

public class Modifier1 {
	
//	제어자 Modifier
//	변수와 메소드의 사용권한을 지정하는 키워드
	
//	static : 정적 필드와 정적 메소드를 만들 수 있다.
//	-> Heap에 저장되는 인스턴스와 달리 static 멤버는 Stack에 저장되어, 프로그램 종료 전까지 메모리에 남아 있다.
//	-> 정적 필드는 서로 다른 인스턴스끼리도 같은 값을 공유하고, 인스턴스를 생성하지 않아도 사용할 수 있다.
//	-> 정적 메소드는 인스턴스를 생성하지 않아도 실행할 수 있다.
	
//	final : 종결의 의미를 지님. 변수, 메소드, 클래스 앞에 쓸 수 있다.
//	-> 변경할 수 없는 변수, 상속과 오버라이드할 수 없는 메소드, 상속과 변경이 불가능한 클래스가 된다.
	
//	abstract : 다형성 참고.
	
	
	
//	접근 제어자(Access Modifier)
//	public : 접근 제한이 없음
//	protected : 같은 패키지 내에서 및 자식 클래스에서 접근 가능
//	default : 같은 패키지 내에서만 접근 가능(접근 제어자를 명시하지 않은 경우)
//	private : 같은 클래스 내에서만 접근 가능
	
//	private 수준일 경우 인스턴스 변수에 접근하려면 getter와 setter를 이용해야 한다.
//	private으로 변수를 선언하고, getter와 setter를 얼마나 만드느냐에 따라서 보안성을 구체적으로 조절할 수 있다.
	
//	(ex) 변하지 않아야 할 변수, 고객명 -> 최초 가입 시에 고객명을 입력받지만 이후에 변경되어선 안 된다.
//	-> private으로 선언한 후 getter 메소드만 생성
	
	}
