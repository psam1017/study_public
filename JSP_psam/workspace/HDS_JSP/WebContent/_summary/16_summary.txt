클라이언트 ↔ 웹 ↔ 서버
웹이란 인터넷을 이용하여 클라이언트가 요청하고 서버가 응답하는 장소이다.

웹 서버 : 요청이 정적인지 동적인지 판단하고 정적인 데이터는 응답하고, 동적인 데이터는 웹 컨테이너에게 요청을 보낸다.
웹 컨테이너 : 요청 받은 동적 데이터를 정적 데이터로 만들어 반환한다.
WAS : 웹 서버와 웹 컨테이너를 모두 관리한다. 웹 서버와 웹 컨테이너는 서로에게 직접 소통하지 않고, WAS에게 요청을 보내고 응답받는다.



내장객체 : 선언 없이 사용할 수 있는 자주 쓰는 객체.
	-request
	-response
	-out
	-session
	-pageContext
	-exception

JSP 태그 : html 태그 안에서 java 언어를 사용하게 만드는 기술이다.
1. 디렉티브 태그 : 페이지에 대한 정보를 설정한다.
2. 스크립트 태그 : HTML 코드 안에 자바 코드를 넣는다.
	-선언문 : <%! %>
	-스크립틀릿 : <% %>
	-표현문 : <%= %>
3. 인클루드 태그 : 외부의 파일을 가져온다.

액션 태그 : 페이지 간의 행동을 제어한다.
	-forward : 다른 페이지로 이동한다.
	-include : 외부의 파일을 가져온다.
	-param : 다른 페이지에서 사용할 수 있도록 변수의 이름과 값을 지정한다.

자바빈즈 : java 언어를 쓰지 않고 태그만으로 객체와 필드를 제어한다.
	<jsp:useBean class="" id="">
	<jsp:setProperty name="" property="" value="">
	<jsp:getProperty name="" property="">

EL : 값을 간결하게 출력하는 기술.
1. 스크립트 태그 표현문 대신 사용할 수 있다.
2. 변수는 param 등의 객체에 저장된다.
<%=name %> → ${param.name}
3. 연산자가 java와 약간 다르다.

JSTL : java 코드를 전혀 쓰지 않고 무조건 태그만 사용하기 위한 기술.
1. 연산, 조건문, 반복문 등 모두 태그로 구현한다.
	<c:set>
	<c:out>
	<c:if>
	<c:choose>
		<c:when>
		<c:otherwise>
	<c:forEach>



"여기까지의 흐름"
applet 쓰지 말자 -> servlet
servlet 쓰지 말자 -> JSP(내장객체, JSP 태그) + 액션 태그
JSP만 쓰지 말자 -> 자바 빈즈 + 액션 태그
자바 빈즈, 액션 태그 쓰지 말자 -> EL, JSTL

JDBC 쓰지 말자 -> myBatis


★
데이터 전달 방식
1. GET : 주소에 데이터를 추가하여 전달. POST보다 빠른 전송.
2. POST : 데이터를 별도로 첨부하여 전달. 주소에 데이터가 보이지 않음.

Ajax : 웹 페이지를 로딩하지 않고 일부분만 서버와 통신하여 갱신하는 기술.
1. JSON, XML, HTML, 텍스트파일 등과 데이터를 교환할 수 있다.
2-1. HTML, CSS, JS, DOM이 필요하고
2-2. JSON, XML, XMLHttpRequest이 필요하다.



Cookie : 



JSON : 



myBatis : 




