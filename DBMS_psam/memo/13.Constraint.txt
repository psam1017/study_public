query3에서 만든 conturies 테이블의 문제점

1. 데이터 중복이 가능하다.

2. NULL이 들어갈 수 있다.
-> NOT NULL : 해당 열에 NULL 값을 허용하지 않는다. 거의 모든 경우에 필요한 제약조건이다.



제약조건 : 표면상으로 테이블의 레코드로 하여, 이런저런 조건이나 제한 사항을 의미한다. 제약조건을 추가하는 이유는 데이터베이스의 무결성을 보장하기 위한 조치 중 하나이다.

-기본키(Primary Key) : 모든 테이블에 반드시 하나 존재해야 한다. 또한 열은 한 개 이상으로 구성해야 한다. 기본 키 값은 중복될 수 없다. DBMS가 기본 키가 가지는 값들을 *캐싱(Caching)하므로 조회속도가 빨라진다.
-> 데이터의 존재 목적에 의한 열을 선택한다. 데이터가 되는 열은 포함하지 않는다.

-> 문자 : 국가 테이블의 국가 코드, 회원 테이블의 ID 혹은 이메일 등 순서가 관계 없는 것들에 대한 정의
-> 숫자 : 레코드들 간의 순서가 관계 있는 것들에 대한 정의. 예를 들어 게시글.

*캐싱 : 값을 메모리에 올려놓음.



-UNIQUE : 유니크 열의 값은 중복될 수 없다. 열은 한 개 이상으로 구성될 수 있다.



-외래 키(Foreign Key) : 어떠한 열에 들어갈 수 있는 값을 외부의 다른 테이블이 가진 값으로 제한하는 것.
-> 외래 키가 참고하는 기준 열은 기본 키이거나 유니크이어야 한다. 즉, 중복 값이 있는 컬럼은 외래 키가 될 수 없다.
-> 만드려는 외래 키는 참조하는 컬럼과 도메인이 완벽히 일치해야 한다.





{제약조건}
-기본 키 : CONSTRAINT PRIMARY KEY (`열 이름`, ...)
-고유 키 : CONSTRAINT UNIQUE (`열 이름`, ...)
-중복x : NOT NULL
-외래 키 : CONSTRAINT FOREIGN KEY(`열 이름`, ...) REFERENCES `외부 스키마 이름`.`외부 테이블 이름` (`외래 키 열 이름`, ...) {ON DELETE CASCADE?} {ON UPDATE CASCADE?}

-> 제약 조건 괄호 안에 여러 속성을 넣으면, 그 속성들의 조합에 제약이 걸린다. 따라서 그 조합에 제약을 걸 것인지, 각각에 제약을 걸 건인지를 잘 구분해야 한다.

-> 외래 키를 설정할 때 특별한 경우가 아니면 CASCADE 제약조건을 걸어준다.
-> ON DELETE CASCADE : 피참조 레코드(부모 레코드)가 삭제되면 이를 참고하는 자식 레코드가 함께 삭제된다.
-> ON UPDATE CASCADE : 피참조 레코드(부모 레코드)가 수정되면 이를 참고하는 자식 레코드가 함께 수정된다.
