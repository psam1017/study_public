spring legacy project 생성
-> spring mvc project 선택
-> 진행하면 mvc2 모델의 프론트 컨트롤러에 해당하는 패키지와 클래스를 생성하도록 요구한다.
-> HomeController 생성

============================================================

Maven project
"pom.xml"에 우리가 사용하고 싶은 라이브러리, API 등을 등록하면 자동으로 다운로드해주는 프로그램

프로젝트 생성 후 pom.xml부터 작업을 해주도록 한다.

-> 건드린 속성
10번째 줄 properties 하위의 전부
61번째 줄 dependency 하위의 전부
(61번째 줄에서 몇 가지 삭제 후)
75번째 줄 Servlet
...keep going
한 번에 정리가 안 되고, 수업이 끝날 때까지 계속해서 수정될 것이다.

프로젝트 우클릭 후 Maven - update... - 아래 쪽에 force... 체크 후 실행

============================================================

만약 계속해서 오류가 발생한다면?

아래 경로의 repository 삭제 후 STS 재실행.
C드라이브 -> 사용자 또는 user -> 내 계정명 -> .m2 -> repository

만약 계속해서 오류가 발생한다면?
pom.xml 내용 삭제 후 저장 -> 되돌리기 -> 저장 -> maven update

여기까지 하면 99%는 해결될 것이다.

============================================================

Lombok 라이브러리
JSP에서는 MVC2에서 VO 만들 때, DB에 있는 필드를 자바 안에서 손수 만들어줬다.
Lombok은 Constructor, Getter, Setter, toString, hashCode, equals를 모두 만들어준다.
단, Lombok의 약간의 버그를 싫어해서 안 쓰는 실무환경도 있음을 유의.

"
Lombok을 이용하면 JAVA 개발 시 getter, setter, toString(), 생성자 등을 @Data 등의 어노테이션을 통해 자동으로 생성해준다.
Google에 lombok 검색 -> Download - Project Lombok -> Download 1.18.22 -> 실행(java -jar lombok.jar) -> Specify location 클릭 -> STS.exe 경로 선택 -> install 클릭
-> STS.exe 경로에 lombok 유무 확인
"

구글에서 lombok 다운로드 후 실행(executable jar file이므로 직접 실행해도 되고 cmd에서 lombok이 있는 경로로 이동한 후 "java -jar lombok.jar")를 입력
-> 파일 탐색기에서 cmd를 실행하면 해당 경로에서 cmd가 실행된다.
IDE를 STS로 설정. 이때 STS는 닫혀 있어야 한다.
-> STS와 같은 디렉토리에 lombok.jar가 생성되어 있으면 완료!

============================================================

새로 만들어진 프로젝트를 보면 src 하위로 뭔가...굉장히 많다!
이게 다 무엇인가?

프로젝트 기본 경로 -> 모두 다룰 줄 알아야 한다!

1) src/main/java						 : 서버단 JAVA 파일
2) src/test/java						 : 단위 테스트를 위한 JAVA 파일
3) src/main/resources						 : src/main/java와 관련된 설정 파일
4) src/test/resources						 : src/test/java와 관련된 설정 파일
5) src/main/webapp/WEB-INF/views				 : jsp, html(html 엔진 필요) 등의 파일 경로
	-> 단, spring boot에서는 jsp를 지원하지 않는다!
6) pom.xml							 : 라이브러리 의존성 관리
7) src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml : 웹과 관련된 스프링 설정 파일(jsp에서 사용한 web.xml처럼 맵핑해주는 파일)
8) src/main/webapp/WEB-INF/spring/root-context.xml		 : 스프링 객체 관련 설정 파일