3-Tier

스프링 프로젝트는 3-tier(티어) 방식으로 구성한다.

Presentation Tier : 화면 계층
Business Tier : 비즈니스 계층
Persistence Tier : 영속 계층(또는 데이터 계층)

+ 각 티어 사이마다 계층이 존재한다. Mapper, Service 등
=========================================================================

Presentation Tier :
	화면에 보여주는 기술을 사용하는 영역
	컨트롤러에서 사용자의 요청에 맞는 응답처리를 진행하며
	HTML엔진(thymeleaf), JSP, HTML 등이 담당하는 영역
	(HTML엔진은 Spring Boot에서 사용)

Business Tier : 
	순수한 비즈니스 로직을 담고 있는 영역.
	고객이 원하는 요구사항을 반영하는 계층이기 때문에 중요한 영역이다.
	이 영역의 설계는 고객의 요구사항과 정확히 일치해야 하며, 서비스 영역이라고 볼 수 있다.
	(결제를 구현하기 위해서 결제 알고리즘에만 집중하는 환경을 만드는 것)

Persistence Tier : 
	데이터를 어떤 방식으로 보관하고 사용하는가를 설계하는 계층
	일반적으로 DBMS를 많이 이용한다.
	상황에 따라 네트워크 호출 혹은 원격 호출 기술이 접목될 수 있다.

=========================================================================

각 영역은 독립적으로 설계된다.
나중에 특정 기술이 변하더라도 필요한 부분을 전자제품의 부품처럼 쉽게 교환할 수 있다.
각 계층의 연결 부위는 인터페이스를 이용해서 설계하는 것이 일반적인 구성방식이다.

Presentation	↔	Business	↔	Persistence	↔	DBMS
					↑			↑
				Service Interface	Mapper Interface	
=========================================================================

번외편
플랫폼과 솔루션(유튜브, 넷플릭스 = 웹 기반이므로 플랫폼. MS Office = 설치해서 사용하면 솔루션)
